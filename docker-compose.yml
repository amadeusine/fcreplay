version: "3.8"
services:
  fcreplay-base:
    image: fcreplay/base:latest
    build:
      context: .
      dockerfile: Dockerfile.base
      
  fcreplay-site:
    image: fcreplay/site:latest
    build:
      context: .
      dockerfile: Dockerfile.site
    networks:
      - postgres
      - world
    volumes:
      - ./config.json:/fcreplay/config.json
    environment:
      - FCREPLAY_CONFIG=/app/config.json
      - APP_MODULE=fcreplay.site.app:app
    depends_on:
      - postgres

  fcreplay-tasker:
    image: fcreplay/image:latest
    build:
      context: .
      dockerfile: Dockerfile
    command: "fcreplay tasker start recorder"
    environment:
      - CLIENT_SECRETS=/path/to/.client_secrets.json
      - CONFIG=/path/to/config.json
      - CPUS=4
      - DESCRIPTION_APPEND=/path/to/description_append.txt
      - IA=/path/to/.ia
      - FCREPLAY_NETWORK=fcreplay_postgres,fcreplay_world
      - MAX_INSTANCES=1
      - MEMORY=4g
      - ROMS=/path/to/ROMs
      - YOUTUBE_UPLOAD_CREDENTIALS=/path/to/.youtube-upload-credentials.json
      - AVI_TEMP_DIR=/path/to/large/avi_storage_temp
      - GET_WEEKLY=true
      - BAD_WORDS_FILE=/path/to/bad_words.txt
    volumes:
      - ./config.json:/root/config.json:ro
      - ./bad_words_file.txt:/root/bad_words_file.txt:ro
      - /var/run/docker.sock:/var/run/docker.sock
      - ./avi_storage_temp:/avi_storage_temp
    networks:
      - postgres
      - world
    depends_on:
      - postgres

  fcreplay-tasker-check_top_weekly:
    image: fcreplay/image:latest
    command: "fcreplay tasker start check_top_weekly"
    volumes:
      - ./config.json:/root/config.json:ro
    networks:
      - postgres
      - world
    depends_on:
      - postgres

  fcreplay-tasker-check_video_status:
    image: fcreplay/image:latest
    command: "fcreplay tasker start check_video_status"
    volumes:
      - ./config.json:/root/config.json:ro
    networks:
      - postgres
      - world
    depends_on:
      - postgres

  fcreplay-tasker-retry_failed_replays:
    image: fcreplay/image:latest
    command: "fcreplay tasker start retry_failed_replays"
    volumes:
      - ./config.json:/root/config.json:ro
    networks:
      - postgres
      - world
    depends_on:
      - postgres

  fcreplay-tasker-delete_failed_replays:
    image: fcreplay/image:latest
    command: "fcreplay tasker start delete_failed_replays"
    volumes:
      - ./config.json:/root/config.json:ro
    networks:
      - postgres
      - world
    depends_on:
      - postgres

  postgres:
    container_name: postgres_container
    image: postgres:13
    environment:
      POSTGRES_USER: ${POSTGRES_USER:-postgres}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-changeme}
      PGDATA: /data/postgres
    volumes:
      - /data/fcreplay_db:/data/postgres
    networks:
      - postgres
    restart: unless-stopped

networks:
  world:
  postgres:
    internal: true

volumes:
  postgres:
